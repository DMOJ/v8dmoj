#!/bin/bash
cd "$( dirname "${BASH_SOURCE[0]}" )"
dir="$(pwd)"
version=$(curl -s 'https://omahaproxy.appspot.com/all.json?os=linux&channel=stable' | python -c 'import json,sys;print(json.load(sys.stdin)[0]["versions"][0]["v8_version"])')

if [ ! -f v8version ] || [ "$(cat v8version)" != '6.6.346.24' ]; then
    [ -f depot_tools/gclient ] || (rm -rf depot_tools && git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git)
    export PATH="$PATH:$(pwd)/depot_tools"
    [ -d v8 ] || (gclient; fetch v8)

    cd v8
    git fetch
    echo "Building v8 version: $version"
    git checkout "$version"
    gclient sync

    tools/dev/v8gen.py x64.release
    cat >> out.gn/x64.release/args.gn <<'EOF'
is_component_build = false
v8_static_library = true
use_sysroot = false
treat_warnings_as_errors = false
icu_use_data_file = false
v8_use_external_startup_data = false
EOF
    gn gen out.gn/x64.release

    ninja -C out.gn/x64.release

    mkdir "$dir/v8lib"
    find out.gn/x64.release/obj/ -name '*.a' -exec cp {} "$dir/v8lib" \;
    cp out.gn/x64.release/obj/third_party/icu/icudata/icudtl_dat.o "$dir/v8lib"
    cp -R include "$dir/v8inc"

    cd "$dir"
    echo "$version" > v8version
fi

rm -f *.deb
debian/build "$(cat v8version)"
mv "../v8dmoj_$(cat v8version)_$(dpkg --print-architecture).deb" .
rm "../v8dmoj_$(cat v8version)"*
